name: Release Please testing
on:
  push:
    branches:
      - main
      - staging
      - dev
      - feature

# permissions:
#   contents: write
#   pull-requests: write

jobs:
  code-deploy:
    name: code deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deployment of myc web code
        env:
          PRIVATE_KEY: |
            ${{ secrets.LOGIN_SSH_PRI_KEY }}
          HOSTNAME: |
            ${{ secrets.HOST }}
          USER_NAME: |
            ${{ secrets.USERNAME }}
        #   APP_ENV: ${{needs.env-selector.outputs.env}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.LOGIN_SSH_PRI_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} '
            mkdir test
            touch test.txt
            ls -la
            '
  # first-job:
  #   name: Infrastructure Deployment
  #   runs-on: ubuntu-latest
  #   outputs:
  #     ec2_server_ip: ${{steps.test-variable.outputs.ec2_server_ip}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Get Terraform Backup Files
  #       id: test-variable
  #       run: |
  #         echo "ec2_server_ip=dhyey" >> $GITHUB_OUTPUT

  #     - name: conditional job
  #       run: |
  #         if git diff --quiet --exit-code ${{ github.sha }}^ ${{ github.sha }} -- pages/; then
  #           echo "No changes in 'pages/' directory. Skipping conditional job."
  #         else
  #           echo "Changes detected in 'pages/' directory. Running conditional job."
  #         fi

  #     - name: conditional job
  #       if: contains(git diff --quiet --name-only ${{ github.sha }}^ ${{ github.sha }} -- pages/)
  #       run: |
  #         echo "conditional job"

  # second-job:
  #   name: running second job
  #   runs-on: ubuntu-latest
  #   needs:
  #     - first-job
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: testing output variable
  #       env:
  #         output_variable: ${{ needs.first-job.outputs.ec2_server_ip }}
  #       run: |
  #         echo ${{ needs.first-job.outputs.ec2_server_ip }}

  # start-runner:
  #   name: Start self-hosted EC2 runner
  #   runs-on: ubuntu-latest
  #   outputs:
  #     label: ${{ steps.start-ec2-runner.outputs.label }}
  #     ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ vars.AWS_REGION }}
  #     - name: Start EC2 runner
  #       id: start-ec2-runner
  #       uses: machulav/ec2-github-runner@v2
  #       with:
  #         mode: start
  #         github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  #         ec2-image-id: ${{ vars.AMI_ID }}
  #         ec2-instance-type: ${{ vars.INSTANCE_TYPE }}
  #         subnet-id: subnet-0b2be48f9a3703df0
  #         security-group-id: sg-071b19002fb10294e

  # tests_e2e:
  #   name: test suit running
  #   needs:
  #     - start-runner
  #   runs-on: ${{ needs.start-runner.outputs.label }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         ls
  #         pwd
  #         # curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh
  #         # source ~/.bashrc
  #         # cat ~/.bashrc
  #         # nvm -v
  #         # nvm install v18.19.0
  #         curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
  #         sudo apt-get install -y nodejs
  #         node --version
  #         npm --version
  #         npm install -g yarn
  #         yarn --version

  # stop-runner:
  #   name: Stop self-hosted EC2 runner
  #   needs:
  #     - start-runner # required to get output from the start-runner job
  #     - tests_e2e # required to wait when the main job is done
  #   runs-on: ubuntu-latest
  #   if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ vars.AWS_REGION }}
  #     - name: Stop EC2 runner
  #       uses: machulav/ec2-github-runner@v2
  #       with:
  #         mode: stop
  #         github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  #         label: ${{ needs.start-runner.outputs.label }}
  #         ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  # conventional-commits:
  #   name: Conventional Commits
  #   runs-on: ubuntu-latest
  #   permissions:
  #       contents: read
  #   steps:
  #       - uses: actions/checkout@v3

  #       - uses: webiny/action-conventional-commits@v1.2.0
  #         with:
  #             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #             allowed-commit-types: "docs,fix,feat,chore,style,refactor,perf,test

# jobs:
#   slackNotification:
#     name: Slack Notification
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Slack Notification
#       uses: rtCamp/action-slack-notify@v2
#       env:
#         # SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#         SLACK_CHANNEL: random
#         SLACK_USERNAME: dhyey

# jobs:
#   spell-check:
#     name: spell check
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: check-spelling
#         id: spelling
#         uses: check-spelling/check-spelling@main
#         with:
#           extra_dictionaries:
#             ./en-custom.txt
#             cspell:software-terms/dict/softwareTerms.txt
#             cspell:npm/dict/npm.txt
#             cspell:typescript/dict/typescript.txt
#             cspell:node/dict/node.txt

# - uses: wow-actions/spell-checker@v1
#   with:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     include: **/*.md

# - uses: rojopolis/spellcheck-github-actions@0.35.0
#   name: Spellcheck
#   with:
#     config: ./spellcheck.yaml
